CMD:ah(playerid, params[]) return cmd_ahelp(playerid, params);
CMD:acmds(playerid, params[]) return cmd_ahelp(playerid, params);
CMD:ahelp(playerid, params[])
{
	if(PlayerData[playerid][pAdminLevel])
	{
	    new dialogstring[256];
	    format(dialogstring, sizeof(dialogstring), "{195080}Probationary Administrator:{FFFFFF} /revive, /kick\n{2F84FD}Administrator:{FFFFFF} /gotopoint\n{DA004E}Lead Administrator:{FFFFFF} /motd, /makehitman, /removehitman\nManagement:{FFFFFF} /makeadmin, /makedonator, /maketester, /restart, /ochangepass");
	    ShowPlayerDialog(playerid, DIALOG_AHELP, DIALOG_STYLE_MSGBOX, "Admin Help", dialogstring, "Close", "");
	}
	else SendUnauthorizedMsg(playerid);
	return true;
}

CMD:makeadmin(playerid, params[])
{
   	new str[128], playerb, value;
    if(PlayerData[playerid][pAdminLevel] < 4 && !IsPlayerAdmin(playerid)) return SendUnauthorizedMsg(playerid);
    if(sscanf(params, "ui", playerb, value)) return SendUsageMessage(playerid, "/makeadmin [playerid/part of name] [level 1-4]");
	if(value < 0 || value > 4) return SendErrorMessage(playerid, "Invalid administrator level, 0-4.");
    if(value == 0)
    {
		PlayerData[playerb][pAdminLevel] = value;
		SaveSQLInt(PlayerData[playerb][pSQLID], "players", "AdminLevel", PlayerData[playerb][pAdminLevel]);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You've been kicked from the Administration Team by %s.", NameRP(playerid));
		SendClientMessage(playerb, COLOR_LIGHTRED, str);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You have kicked %s from the Administration Team.", NameRP(playerb));
		SendClientMessage(playerid, COLOR_LIGHTRED, str);
        return true;
	}
	if(value == 1)
	{
		PlayerData[playerb][pAdminLevel] = value;
		SaveSQLInt(PlayerData[playerb][pSQLID], "players", "AdminLevel", PlayerData[playerb][pAdminLevel]);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You've been made a Probationary Administrator (level %i) by %s.", value, NameRP(playerid));
		SendClientMessage(playerb, COLOR_LIGHTRED, str);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You have set %s's admin level to Probationary Administrator.", NameRP(playerb));
		SendClientMessage(playerid, COLOR_LIGHTRED, str);
	}
	if(value == 2)
	{
		PlayerData[playerb][pAdminLevel] = value;
		SaveSQLInt(PlayerData[playerb][pSQLID], "players", "AdminLevel", PlayerData[playerb][pAdminLevel]);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You've been made an Administrator (level %i) by %s.", value, NameRP(playerid));
		SendClientMessage(playerb, COLOR_LIGHTRED, str);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You have set %s's admin level to Administrator.", NameRP(playerb));
		SendClientMessage(playerid, COLOR_LIGHTRED, str);
	}
	if(value == 3)
	{
		PlayerData[playerb][pAdminLevel] = value;
		SaveSQLInt(PlayerData[playerb][pSQLID], "players", "AdminLevel", PlayerData[playerb][pAdminLevel]);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You've been made a Lead Administrator (level %i) by %s.", value, NameRP(playerid));
		SendClientMessage(playerb, COLOR_LIGHTRED, str);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You have set %s's admin level to Lead Administrator.", NameRP(playerb));
		SendClientMessage(playerid, COLOR_LIGHTRED, str);
	}
	if(value == 4)
	{
		PlayerData[playerb][pAdminLevel] = value;
		SaveSQLInt(PlayerData[playerb][pSQLID], "players", "AdminLevel", PlayerData[playerb][pAdminLevel]);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You've been made a Management (level %i) by %s.", value, NameRP(playerid));
		SendClientMessage(playerb, COLOR_LIGHTRED, str);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You have set %s's admin level to Management.", NameRP(playerb));
		SendClientMessage(playerid, COLOR_LIGHTRED, str);
	}
	return true;
}

CMD:makedonator(playerid, params[])
{
   	new str[128], playerb, value;
    if(PlayerData[playerid][pAdminLevel] < 4) return SendUnauthorizedMsg(playerid);
    if(sscanf(params, "ui", playerb, value)) return SendUsageMessage(playerid, "/makedonator [playerid/part of name] [donator level 1-3]");
	if(value < 0 || value > 3) return SendErrorMessage(playerid, "Invalid donator level, 0-3.");
    if(value == 0)
    {
		PlayerData[playerb][pDonator] = value;
		SaveSQLInt(PlayerData[playerb][pSQLID], "players", "Donator", PlayerData[playerb][pDonator]);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} Your donator status has been revoked by %s", NameRP(playerid));
		SendClientMessage(playerb, COLOR_LIGHTRED, str);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You have revoked %s's donator status.", NameRP(playerb));
		SendClientMessage(playerid, COLOR_LIGHTRED, str);
        return true;
	}
	if(value == 1)
	{
		PlayerData[playerb][pDonator] = value;
		SaveSQLInt(PlayerData[playerb][pSQLID], "players", "Donator", PlayerData[playerb][pDonator]);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You've been made a Ruby Donator (level %i) by %s", value, NameRP(playerid));
		SendClientMessage(playerb, COLOR_LIGHTRED, str);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You have set %s's donator status to Ruby Donator.", NameRP(playerb));
		SendClientMessage(playerid, COLOR_LIGHTRED, str);
	}
	if(value == 2)
	{
		PlayerData[playerb][pDonator] = value;
		SaveSQLInt(PlayerData[playerb][pSQLID], "players", "Donator", PlayerData[playerb][pDonator]);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You've been made a Sapphire Donator (level %i) by %s", value, NameRP(playerid));
		SendClientMessage(playerb, COLOR_LIGHTRED, str);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You have set %s's donator status to Sapphire Donator.", NameRP(playerb));
		SendClientMessage(playerid, COLOR_LIGHTRED, str);
	}
	if(value == 3)
	{
		PlayerData[playerb][pDonator] = value;
		SaveSQLInt(PlayerData[playerb][pSQLID], "players", "Donator", PlayerData[playerb][pDonator]);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You've been made a Diamond Donator (level %i) by %s", value, NameRP(playerid));
		SendClientMessage(playerb, COLOR_LIGHTRED, str);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You have set %s's donator status to Diamond Donator.", NameRP(playerb));
		SendClientMessage(playerid, COLOR_LIGHTRED, str);
	}
	return true;
}

CMD:maketester(playerid, params[])
{
   	new str[128], playerb, value;
    if(PlayerData[playerid][pAdminLevel] < 4 && PlayerData[playerid][pTester] < 2) return SendUnauthorizedMsg(playerid);
    if(sscanf(params, "ui", playerb, value)) return SendUsageMessage(playerid, "/maketester [playerid/part of name] [tester level 1-2].");
	if(value < 0 || value > 3) return SendErrorMessage(playerid, "Invalid tester level, 0-2.");
    if(value == 0)
    {
		PlayerData[playerb][pTester] = value;
		SaveSQLInt(PlayerData[playerb][pSQLID], "players", "Tester", PlayerData[playerb][pTester]);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} Your tester status has been revoked by %s", NameRP(playerid));
		SendClientMessage(playerb, COLOR_LIGHTRED, str);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You have revoked %s's tester status.", NameRP(playerb));
		SendClientMessage(playerid, COLOR_LIGHTRED, str);
        return true;
	}
	if(value == 1)
	{
		PlayerData[playerb][pTester] = value;
		SaveSQLInt(PlayerData[playerb][pSQLID], "players", "Tester", PlayerData[playerb][pTester]);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You've been made a Tester (level %i) by %s", value, NameRP(playerid));
		SendClientMessage(playerb, COLOR_LIGHTRED, str);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You have set %s's tester level to Tester.", NameRP(playerb));
		SendClientMessage(playerid, COLOR_LIGHTRED, str);
	}
	if(value == 2)
	{
		if(PlayerData[playerid][pTester] == 2) return SendErrorMessage(playerid, "You are not authorized to set tester's level to 'Lead'.");
		PlayerData[playerb][pTester] = value;
		SaveSQLInt(PlayerData[playerb][pSQLID], "players", "Tester", PlayerData[playerb][pTester]);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You've been made a Lead Tester (level %i) by %s", value, NameRP(playerid));
		SendClientMessage(playerb, COLOR_LIGHTRED, str);
		format(str, sizeof(str), "[SERVER]:{FFFFFF} You have set %s's tester level to Lead Tester.", NameRP(playerb));
		SendClientMessage(playerid, COLOR_LIGHTRED, str);
	}
	return true;
}

CMD:makehitman(playerid, params[])
{
   	new str[128], playerb;
    if(PlayerData[playerid][pAdminLevel] < 3) return SendUnauthorizedMsg(playerid);
    if(sscanf(params, "u", playerb)) return SendUsageMessage(playerid, "/makehitman [playerid/part of name]");
	if(IsAHitman(playerb)) return SendErrorMessage(playerid, "That player is already in the Hitman Agency. To revoke it, use /removehitman.");
	
    PlayerData[playerb][pHitman] = 1;
	format(str, sizeof(str), "[SERVER]:{FFFFFF} You have been hired into the Hitman Agency by %s. Use /hmahelp to see your new commands.", NameRP(playerid));
	SendClientMessage(playerb, COLOR_LIGHTRED, str);
	format(str, sizeof(str), "[SERVER]:{FFFFFF} You have successfully gave Hitman status to %s.", NameRP(playerb));
	SendClientMessage(playerid, COLOR_LIGHTRED, str);
	return true;
}

CMD:removehitman(playerid, params[])
{
   	new str[128], playerb;
    if(PlayerData[playerid][pAdminLevel] < 3) return SendUnauthorizedMsg(playerid);
    if(sscanf(params, "u", playerb)) return SendUsageMessage(playerid, "/removehitman [playerid/part of name]");
	if(!IsAHitman(playerb)) return SendErrorMessage(playerid, "That player is not in the Hitman Agency");
	
    PlayerData[playerb][pHitman] = 0;
	format(str, sizeof(str), "[SERVER]:{FFFFFF} You have been terminated from the Hitman Agency by %s.", NameRP(playerid));
	SendClientMessage(playerb, COLOR_LIGHTRED, str);
	format(str, sizeof(str), "[SERVER]:{FFFFFF} You have successfully removed Hitman status from %s.", NameRP(playerb));
	SendClientMessage(playerid, COLOR_LIGHTRED, str);
	return true;
}

CMD:gotopoint(playerid, params[])
{
	if(PlayerData[playerid][pAdminLevel] < 2) return SendUnauthorizedMsg(playerid);
	new	Float:x, Float:y, Float:z, interior;
	if(sscanf(params, "fffi", x, y, z, interior)) return SendUsageMessage(playerid, "/gotopoint [x] [y] [z] [interior id]");
	SetPlayerPos(playerid, x, y, z);
	SetPlayerInterior(playerid, interior);
	return true;
}

CMD:restart(playerid, params[])
{
	if(PlayerData[playerid][pAdminLevel] < 4) return SendUnauthorizedMsg(playerid);
	SendClientMessageToAll(COLOR_GOLD, "[Announcement]:{FFFFFF} The server will be restarted in 20 seconds.");
	RestartEx();
	return true;
}

CMD:revive(playerid, params[])
{
    new targetid;
	if(!PlayerData[playerid][pAdminLevel]) return SendUnauthorizedMsg(playerid);
    if(sscanf(params, "u", targetid)) return SendUsageMessage(playerid, "/revive [playerid/part of name]");
	if(targetid == INVALID_PLAYER_ID) return SendErrorMessage(playerid, "That player is not online.");
	if(Injured[targetid] == 0) return SendErrorMessage(playerid, "That player is not injured.");
	
	new string[100];
	format(string, sizeof(string), "(ADMIN INFO) {FFFFFF}You have successfully revived %s.", NameRP(targetid));
    SendClientMessage(playerid, COLOR_ADMINFO, string);
	format(string, sizeof(string), "(ADMIN INFO) {FFFFFF}You have been revived by %s %s.", AdminRank(playerid), NameRP(playerid));
    SendClientMessage(targetid, COLOR_ADMINFO, string);
	
	KillTimer(AcceptDeathTimer[targetid]);
	KillTimer(LoseHealthTimer[targetid]);
	AcceptDeath[targetid] = 0;
	Injured[targetid] = 0;
	ClearAnimations(targetid);
	SetPlayerHealth(targetid, 100.0);
    return true;
}

CMD:motd(playerid, params[])
{
	if(PlayerData[playerid][pAdminLevel] < 3) return SendUnauthorizedMsg(playerid);
	if(isnull(params)) return SendUsageMessage(playerid, "/motd [message of the day]");

	new string[267];
	SendServerMessage(playerid, "You have successfully updated the message of the day.");
	format(MOTDText, sizeof MOTDText, "%s", params);
	format(string, sizeof(string), "[Player MOTD]: %s", MOTDText);
	SendClientMessageToAll(COLOR_WHITE, string);
	UpdateMOTD();
	return true;
}

CMD:togooc(playerid, params[])
{
	new string[256];
	if(PlayerData[playerid][pAdminLevel] < 3) return SendUnauthorizedMsg(playerid);
	if(!GeneralOOC[playerid])
    {
		format(string, sizeof(string), "(ADMIN INFO){FFFFFF} %s %s has toggled the General OOC Chat on.", AdminRank(playerid), NameRP(playerid));
        SendClientMessageToAll(COLOR_ADMINFO, string);
        GeneralOOC[playerid] = true;
    }
    else
	{
		format(string, sizeof(string), "(ADMIN INFO){FFFFFF} %s %s has toggled the General OOC Chat off.", AdminRank(playerid), NameRP(playerid));
        SendClientMessageToAll(COLOR_ADMINFO, string);
    	GeneralOOC[playerid] = false;
	}
	return true;
}

CMD:ochangepass(playerid, params[])
{
    new playersname[MAX_PLAYER_NAME], query[128], NewPassword[65];
    if(PlayerData[playerid][pAdminLevel] < 4) return SendUnauthorizedMsg(playerid);
	if(sscanf(params, "s[24]s[65]", playersname, NewPassword))
	{
		SendUsageMessage(playerid, "/ochangepass [full name (case sensitive)] [password]");
		SendServerMessage(playerid, "Make sure to check that the player is not online.");
	}

	mysql_format(sqlConnection, query, sizeof(query), "SELECT `AdminLevel` FROM `players` WHERE `Name` = '%e' LIMIT 1", playersname);
	mysql_pquery(sqlConnection, query, "OnOfflineChangePass", "iss", playerid, playersname, NewPassword);
	return true;
}

CMD:kick(playerid, params[])
{
	new playerb, reason, kick[256];
    if(PlayerData[playerid][pAdminLevel] < 1) return SendUnauthorizedMsg(playerid);
    if(sscanf(params, "us", playerb, reason)) return SendUsageMessage(playerid, "/kick [playerid/name] [reason]");

	format(kick, sizeof(kick), "[SERVER]:{FFFFFF} %s has been kicked from the server by %s, reason: %s", NameRP(playerb), NameRP(playerid), reason);
	SendClientMessageToAll(COLOR_LIGHTRED, kick);

	SendClientMessageEx(playerb, COLOR_YELLOW, "You have been kicked from the server by %s, reason: %s", NameRP(playerid), reason);
	KickEx(playerb);
	return true;
}

CMD:filterscript(playerid, params[])
{
	new str[128], filterscript[50], option[10];
	if(sscanf(params, "s[50]s[10]", option, filterscript)) return SendUsageMessage(playerid, "/filterscript [load or unload] [filterscript name]");
    if(!strcmp(option, "load", true))
	{
		format(str, sizeof(str), "loadfs %s", filterscript);
		SendRconCommand(str);
		SendSuccessMessage(playerid, "You have successfully loaded the filterscript");
	}
	if(!strcmp(option, "unload", true))
	{
		format(str, sizeof(str), "unloadfs %s", filterscript);
		SendRconCommand(str);
		SendSuccessMessage(playerid, "You have successfully unloaded the filterscript");
	}
	else return SendUsageMessage(playerid, "/filterscript [load or unload] [filterscript name]");
	return true;
}